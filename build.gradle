buildscript {
    repositories {
        mavenCentral()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.1'
    }
}

repositories {
    mavenCentral()
    google()
}

apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

static String makeVersionName(String majorVersion, String minorVersion, String patchVersion) {
    majorVersion ? majorVersion + "." + minorVersion + "." + patchVersion : "1.0.0"
}

def getVersionCode = {
    def versionCode = System.getenv("TRAVIS_BUILD_NUMBER") ? System.getenv("TRAVIS_BUILD_NUMBER").toInteger() : 1
    println "versionCode is set to $versionCode"
    return versionCode
}

def getVersionName = {
    def versionName = makeVersionName(System.getenv("MAJOR_VERSION"), System.getenv("MINOR_VERSION"), System.getenv("TRAVIS_BUILD_NUMBER"))
    println "versionName is set to $versionName"
    return versionName
}

android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 30
        versionCode getVersionCode()
        versionName getVersionName()
    }
    buildTypes {
        release {
            minifyEnabled false
            consumerProguardFiles 'proguard-rules.pro'
        }
    }
}

publishing {
    publications {
        androidPermissions(MavenPublication) {
            groupId 'io.github.nishkarsh'
            artifactId 'android-permissions'
            version android.defaultConfig.versionName
            artifact("$buildDir/outputs/aar/android-permissions-release.aar")
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                configurations.implementation.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }

                configurations.annotationProcessor.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                    dependencyNode.appendNode('optional', true)
                }
            }

            pom {
                name = 'Android Permissions'
                description = 'An android library that makes it really easy to deal with dynamic permissions. Based on the context, the library automatically decides whether to show a dialog (in case the app is in foreground) or a notification (in case permission is required by a background service).'
                url = 'https://github.com/nishkarsh/android-permissions'

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://github.com/nishkarsh/android-permissions/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'nishkarsh'
                        name = 'Nishkarsh Sharma'
                        email = 'nishkarsh4@gmail.com'
                    }
                }
                scm {
                    connection = 'https://github.com/nishkarsh/android-permissions.git'
                    developerConnection = 'git@github.com:nishkarsh/android-permissions.git'
                    url = 'https://github.com/nishkarsh/android-permissions'
                }
            }
        }
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

dependencies {
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:3.0.0'

    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
    implementation 'org.parceler:parceler-api:1.1.12'
    annotationProcessor 'org.parceler:parceler:1.1.12'
}
